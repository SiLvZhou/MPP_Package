<AML>
 <Item type="Method" id="94F320A66DF545C5B22DCB25A3518BE3" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[Dictionary<String, String> changedPlanAMLs = (Dictionary<String, String>) RequestState["MPP|ClientChanges"];

if (changedPlanAMLs != null)
{
	List<Item> modifiedProcessPlans = new List<Item>();
	Innovator innovatorInstance = this.getInnovator();
	StringBuilder errorString = new StringBuilder();

	// put modified plans into list and cleanup RequestState
	foreach (String planId in changedPlanAMLs.Keys)
	{
		Item applyAmlItem = this.newItem();
		applyAmlItem.loadAML(changedPlanAMLs[planId]);

		modifiedProcessPlans.Add(applyAmlItem);
	}

	RequestState.Remove("MPP|ClientChanges");

	// try to apply processPlans changes
	foreach (Item modifiedPlan in modifiedProcessPlans)
	{
		XmlNode relationshipsNode = modifiedPlan.node.SelectSingleNode("./Relationships");

		if (relationshipsNode != null)
		{
			String processPlanId = modifiedPlan.getID();
			Item relationshipItems = modifiedPlan.getRelationships();
			int relationshipsCount = relationshipItems.getItemCount();

			// implicitly set 'source_id' property on relationship items
			for (int i = 0; i < relationshipsCount; i++)
			{
				Item relationship = relationshipItems.getItemByIndex(i);
				relationship.setProperty("source_id", processPlanId);
			}

			String relationshipAml = relationshipsNode.InnerXml;
			Item applyResult = innovatorInstance.applyAML("<AML>" + relationshipAml + "</AML>");

			if (applyResult.isError())
			{
				errorString.Append(processPlanId).Append(":").Append(applyResult.getErrorString()).Append(Environment.NewLine);
			}
		}
	}

	if (errorString.Length > 0)
	{
		throw new Exception(errorString.ToString());
	}
}

//this applySQL should be the last request to DataBase to unlock the row if different users will do the same at the same moment. The second user will wait until
// the transaction of the first user will be commited to DB.
string processPlansIdsToUpdate = RequestState["MPP|PpIds"] as string;
if (!string.IsNullOrEmpty(processPlansIdsToUpdate))
{
	this.getInnovator().applySQL(String.Format(CultureInfo.InvariantCulture, "UPDATE innovator.MPP_PROCESSPLAN SET mpp_locked_by_id=NULL WHERE id in ({0})", processPlansIdsToUpdate));
	RequestState.Remove("MPP|PpIds");
}

return this;]]></method_code>
  <method_type>C#</method_type>
  <name>mpp_PlanAfterUpdate</name>
 </Item>
</AML>